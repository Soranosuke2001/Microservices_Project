version: "3.8"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    platform: linux/amd64
    ports:
      - "2181"
    hostname: zookeeper
    networks:
      - api.network
    volumes:
      - zookeeper-data:/opt/zookeeper-3.4.13/data

  kafka:
    image: wurstmeister/kafka
    platform: linux/amd64
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    networks:
      - api.network
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1,event_log:1:1" 
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kafka-data:/kafka/kafka-logs
    depends_on:
      - "zookeeper"

  db:
    image: mysql:5.7
    platform: linux/amd64
    restart: always
    environment:
      MYSQL_DATABASE: 'events'
      MYSQL_USER: 'sora'
      MYSQL_PASSWORD: 'sora'
      MYSQL_ROOT_PASSWORD: 'sora'
    ports:
      - '3306'
    networks:
      - api.network
    volumes:
      - my-db:/var/lib/mysql

  nginx:
    image: nginx:latest
    volumes:
      - /home/soranosuke/Microservices_Project/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - receiver
      - storage
      - processing
      - audit_log
      - dashboard
    ports:
      - '80:80'
    networks:
      - api.network

  audit_log:
    image: soranosuke/audit_log:latest
    platform: linux/amd64
    environment:
      - TARGET_ENV=test
    networks:
      - api.network
    ports:
      - '8110'
    volumes:
      - /home/soranosuke/config/audit_log:/config
      - /home/soranosuke/logs:/logs
    depends_on:
      - kafka

  receiver:
    image: soranosuke/receiver:latest
    platform: linux/amd64
    environment:
      - TARGET_ENV=test
    networks:
      - api.network
    ports:
      - '8080'
    volumes:
      - /home/soranosuke/config/receiver:/config
      - /home/soranosuke/logs:/logs
    depends_on:
      - kafka
      - event_logger

  storage:
    image: soranosuke/storage:latest
    platform: linux/amd64
    environment:
      - TARGET_ENV=test
    networks:
      - api.network
    ports:
      - '8090'
    volumes:
      - /home/soranosuke/config/storage:/config
      - /home/soranosuke/logs:/logs
    depends_on:
      - kafka
      - db
      - event_logger

  processing:
    image: soranosuke/processing:latest
    platform: linux/amd64
    environment:
      - TARGET_ENV=test
    networks:
      - api.network
    ports:
      - '8100'
    volumes:
      - /home/soranosuke/config/processing:/config
      - /home/soranosuke/logs:/logs
      - processing-db:/data
    depends_on:
      - kafka
      - db
      - event_logger
  
  dashboard:
    image: soranosuke/dashboard:latest
    platform: linux/amd64
    ports:
      - '3000'
    networks:
      - api.network
    depends_on:
      - processing
      - audit_log

  event_logger:
    image: soranosuke/event_logger:latest
    platform: linux/amd64
    environment:
      - TARGET_ENV=test
    ports:
      - '8120'
    networks:
      - api.network
    volumes:
      - event_logger-db:/data
    depends_on:
      - kafka

networks:
  api.network:

volumes:
  my-db:
  zookeeper-data:
  kafka-data:
  processing-db:
  event_logger-db: